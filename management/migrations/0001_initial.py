# Generated by Django 3.0.6 on 2020-06-11 06:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=64)),
                ('state', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='Название отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=32, verbose_name='ФИО')),
                ('phone', models.CharField(max_length=32, verbose_name='Телефон')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата подключения')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('bot_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.BotUser', verbose_name='Viber аккаунт')),
                ('departments', models.ManyToManyField(to='management.Department', verbose_name='Отделы')),
                ('managed_departments', models.ManyToManyField(blank=True, related_name='managed_departments', to='management.Department', verbose_name='Отделы, которыми может управлять')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт в админ панели')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название задачи')),
                ('text', models.TextField(verbose_name='Текст задачи')),
                ('file', models.FileField(blank=True, null=True, upload_to='', verbose_name='Файл')),
                ('sent', models.BooleanField(default=False)),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('start_date', models.DateTimeField(blank=True, help_text='оставьте пустым, если нужно отправить сразу', null=True, verbose_name='Время отправки задачи')),
                ('departments', models.ManyToManyField(blank=True, to='management.Department', verbose_name='Отделы')),
                ('employees', models.ManyToManyField(blank=True, to='management.Employee', verbose_name='Исполнители')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
        migrations.CreateModel(
            name='TaskEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('deadline_expired_notif', models.BooleanField(default=False, editable=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Employee')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('photo', models.URLField(blank=True, null=True, verbose_name='Фото')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('checked', models.BooleanField(default=False, verbose_name='Проверен')),
                ('accepted', models.BooleanField(default=False, verbose_name='Утвержден')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Текст')),
                ('answer_file', models.FileField(blank=True, null=True, upload_to='', verbose_name='Файл')),
                ('task_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.TaskEmployee')),
            ],
            options={
                'verbose_name': 'Отчет',
                'verbose_name_plural': 'Отчеты',
            },
        ),
        migrations.CreateModel(
            name='DepartmentManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departments', models.ManyToManyField(to='management.Department', verbose_name='Отделы')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='management.Employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Управляющий',
                'verbose_name_plural': 'Управляющие',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='report_managers',
            field=models.ManyToManyField(to='management.Employee', verbose_name='Принимающие отчеты'),
        ),
        migrations.CreateModel(
            name='DelayedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Employee', verbose_name='Сотрудник')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Task', verbose_name='Сотрудник')),
            ],
        ),
        migrations.CreateModel(
            name='DayOff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Начало выходных')),
                ('end_date', models.DateField(verbose_name='Конец выходных')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Утвержден')),
                ('checked', models.BooleanField(default=False, verbose_name='Проверен')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Выходной',
                'verbose_name_plural': 'Выходные',
            },
        ),
        migrations.CreateModel(
            name='AcceptedTaskReport',
            fields=[
            ],
            options={
                'verbose_name': 'Полный отчет',
                'verbose_name_plural': 'Полные отчеты',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.taskreport',),
        ),
        migrations.CreateModel(
            name='WaitingTaskReport',
            fields=[
            ],
            options={
                'verbose_name': 'Отчет на утверждение',
                'verbose_name_plural': 'Отчеты на утверждение',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.taskreport',),
        ),
    ]
